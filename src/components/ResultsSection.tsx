import React from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Progress } from '@/components/ui/progress';
import { QuizAnswer } from '../pages/Index';
import { TreeDeciduous } from 'lucide-react';

// Armenian CO‚ÇÇ fun facts array
const armeniaFunFacts = [
  "üá¶üá≤ ’Ñ’´’ª’´’∂ ’∞’°’µ’® ÷Ö÷Ä’°’Ø’°’∂ ’°÷Ä’ø’°’∂’•’ø’∏÷Ç’¥ ’ß ’¥’∏’ø 12 ’Ø’£ CO‚ÇÇ÷â",
  "üá¶üá≤ ’Ä’°’µ’°’Ω’ø’°’∂’∏÷Ç’¥ ’°’¥’•’∂’°’∑’°’ø CO‚ÇÇ ’°÷Ä’ø’°’∂’•’ø’∏÷Ç’¥’® ’£’°’¨’´’Ω ’ß ’ø÷Ä’°’∂’Ω’∫’∏÷Ä’ø’´÷Å ÷á ’ª’•’º’∏÷Ç÷Å’∏÷Ç’¥’´÷Å÷â",
  "üá¶üá≤ ’è’°÷Ä’•’Ø’°’∂ ’¥’´’ª’´’∂’∏÷Ç’¥ ’∞’°’µ’® ’°÷Ä’ø’°’∂’•’ø’∏÷Ç’¥ ’ß ’°’æ’•’¨’´ ÷Ñ’°’∂ 4 ’ø’∏’∂’∂’° CO‚ÇÇ÷â",
  "üá¶üá≤ ‘µ’©’• ‘µ÷Ä÷á’°’∂’∏÷Ç’¥ ’°’∫÷Ä’∏’≤ 100 ’¥’°÷Ä’§ ’∞’•’Æ’°’∂’´’æ’∏’æ ’•÷Ä’©÷á’•’Ø’´, ’ø’°÷Ä’•’Ø’°’∂ ’Ø’≠’∂’°’µ’•’∂ ’°’æ’•’¨’´ ÷Ñ’°’∂ 50 ’ø’∏’∂’∂’° CO‚ÇÇ÷â",
  "üá¶üá≤ ’Ä’°’µ’°’Ω’ø’°’∂’∏÷Ç’¥ ’æ’•÷Ä’°’Ø’°’∂’£’∂’æ’∏’≤ ’ß’∂’•÷Ä’£’´’°’µ’´ ’¶’°÷Ä’£’°÷Å’∏÷Ç’¥’® ’Ø’°÷Ä’∏’≤ ’ß ’Ø÷Ä’≥’°’ø’•’¨ ’•÷Ä’Ø÷Ä’´ ’®’∂’§’∞’°’∂’∏÷Ç÷Ä CO‚ÇÇ ’°÷Ä’ø’°’∂’•’ø’∏÷Ç’¥’∂’•÷Ä’´ 20%-’®÷â"
];

interface ResultsSectionProps {
  answers: QuizAnswer[];
  onRestart: () => void;
}

const ResultsSection: React.FC<ResultsSectionProps> = ({ answers, onRestart }) => {
  const totalCO2 = answers.reduce((sum, answer) => sum + answer.co2Value, 0);
  const dailyCO2 = totalCO2;
  const weeklyCO2 = totalCO2 * 7;
  const yearlyCO2 = totalCO2 * 365;

  const getImpactLevel = (co2: number) => {
    if (co2 < 100) return { level: 'low', color: 'green', emoji: 'üå±', earth: 'üåç' };
    if (co2 < 500) return { level: 'medium', color: 'yellow', emoji: 'üåø', earth: 'üåé' };
    return { level: 'high', color: 'red', emoji: 'üå°Ô∏è', earth: 'üåã' };
  };

  const impact = getImpactLevel(dailyCO2);
  const progressValue = Math.min((dailyCO2 / 1000) * 100, 100);

  const getSuggestions = () => {
    const suggestions = [];

    const digitalAnswers = answers.slice(0, 3);
    const highDigitalUsage = digitalAnswers.some(answer => answer.co2Value > 20);
    if (highDigitalUsage) {
      suggestions.push("üì± ’ì’∏÷Ä’±’´÷Ä ’Ω’°’∞’¥’°’∂’°÷É’°’Ø’•’¨ ’©’æ’°’µ’´’∂ ’™’°’¥’°’∂’°’Ø’®");
    }

    const shoppingAnswer = answers.find(answer => answer.answer.includes('’ä’¨’°’Ω’ø’´’Ø'));
    if (shoppingAnswer) {
      suggestions.push("üõçÔ∏è ’ì’∏÷Ä’±’´÷Ä ’∂’æ’°’¶’•÷Å’∂’•’¨ ’∫’¨’°’Ω’ø’´’Ø’´ ÷Ö’£’ø’°’£’∏÷Ä’Æ’∏÷Ç’¥’®");
    }

    const foodAnswers = answers.slice(3, 6);
    const highFoodImpact = foodAnswers.some(answer => answer.co2Value > 100);
    if (highFoodImpact) {
      suggestions.push("üçé ‘∏’∂’ø÷Ä’´÷Ä ’ø’•’≤’°’Ø’°’∂ ’°÷Ä’ø’°’§÷Ä’°’∂÷Ñ");
    }

    if (suggestions.length === 0) {
      suggestions.push("üåü ’Ä’´’°’∂’°’¨’´ ’ß! ’á’°÷Ä’∏÷Ç’∂’°’Ø’´÷Ä ’ß’Ø’∏’¨’∏’£’´’°’Ø’°’∂ ’°’∫÷Ä’•’¨’°’Ø’•÷Ä’∫’®");
    }

    return suggestions;
  };

  const suggestions = getSuggestions();

  // Get a random Armenia fact (only once)
  const randomArmeniaFact = React.useMemo(() => {
    const index = Math.floor(Math.random() * armeniaFunFacts.length);
    return armeniaFunFacts[index];
  }, []);

  return (
    <div className="min-h-screen w-full bg-gradient-to-br from-green-50 via-blue-50 to-emerald-50 p-2 sm:p-4 lg:p-8">
      <div className="w-full max-w-6xl mx-auto">
        <Card className="w-full p-4 sm:p-6 lg:p-8 bg-white/95 backdrop-blur-sm shadow-2xl border-0 animate-fade-in">
          <div className="text-center mb-6 sm:mb-8">
            <div className="text-4xl sm:text-5xl lg:text-6xl mb-3 sm:mb-4">{impact.earth}</div>
            <h1 className="text-xl sm:text-3xl lg:text-4xl font-bold text-gray-800 mb-3 sm:mb-4 px-2">
              üå± ’î’∏ ’°’º÷Ö÷Ä’µ’° ’Ω’∏’æ’∏÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ CO‚ÇÇ ’°’¶’§’•÷Å’∏÷Ç’©’µ’∏÷Ç’∂’®
            </h1>
          </div>

          <div className="grid lg:grid-cols-2 gap-4 sm:gap-6 lg:gap-8 mb-6 sm:mb-8">
            <div className="space-y-4 sm:space-y-6">
              <div className={`bg-gradient-to-r from-${impact.color}-100 to-${impact.color}-200 p-4 sm:p-6 rounded-lg shadow-md`}>
                <div className="flex items-center justify-center gap-2 sm:gap-3 mb-3 sm:mb-4">
                  <span className="text-2xl sm:text-3xl">{impact.emoji}</span>
                  <div className="text-center">
                    <div className="text-2xl sm:text-3xl font-bold text-gray-800">{dailyCO2.toFixed(1)}g</div>
                    <div className="text-xs sm:text-sm text-gray-600">CO‚ÇÇ ÷Ö÷Ä’°’Ø’°’∂</div>
                  </div>
                </div>

                <Progress value={progressValue} className={`h-3 sm:h-4 mb-2 bg-${impact.color}-100`} />

                <div className="text-center text-xs sm:text-sm text-gray-600">
                  {impact.level === 'low' ? '’ë’°’Æ÷Ä ’°’¶’§’•÷Å’∏÷Ç’©’µ’∏÷Ç’∂' : impact.level === 'medium' ? '’Ñ’´’ª’´’∂ ’°’¶’§’•÷Å’∏÷Ç’©’µ’∏÷Ç’∂' : '‘≤’°÷Ä’±÷Ä ’°’¶’§’•÷Å’∏÷Ç’©’µ’∏÷Ç’∂'}
                </div>
              </div>

              <div className="bg-gradient-to-r from-blue-50 to-green-50 p-4 sm:p-6 rounded-lg">
                <h3 className="font-semibold text-gray-800 mb-3 sm:mb-4 flex items-center gap-2 text-sm sm:text-base">
                  <TreeDeciduous className="w-4 h-4 sm:w-5 sm:h-5 text-green-500" />
                  ’è’°÷Ä’•’Ø’°’∂ ’°’¶’§’•÷Å’∏÷Ç’©’µ’∏÷Ç’∂
                </h3>
                <div className="space-y-2">
                  <div className="flex justify-between text-xs sm:text-sm">
                    <span>’á’°’¢’°’©’°’Ø’°’∂:</span>
                    <span className="font-medium">{(weeklyCO2 / 1000).toFixed(2)} ’Ø’£ CO‚ÇÇ</span>
                  </div>
                  <div className="flex justify-between text-xs sm:text-sm">
                    <span>’è’°÷Ä’•’Ø’°’∂:</span>
                    <span className="font-medium">{(yearlyCO2 / 1000).toFixed(2)} ’Ø’£ CO‚ÇÇ</span>
                  </div>
                </div>
              </div>
            </div>

            <div className="space-y-4 sm:space-y-6">
              <div className="bg-white p-4 sm:p-6 rounded-lg shadow-md border">
                <h3 className="font-semibold text-gray-800 mb-3 sm:mb-4 flex items-center gap-2 text-sm sm:text-base">
                  <span className="text-lg sm:text-xl">üí°</span>
                  ‘Ω’∏÷Ä’∞’∏÷Ç÷Ä’§’∂’•÷Ä
                </h3>
                <ul className="space-y-2 sm:space-y-3">
                  {suggestions.map((suggestion, index) => (
                    <li key={index} className="flex items-start gap-2 sm:gap-3 p-2 sm:p-3 bg-gray-50 rounded-lg">
                      <span className="text-green-500 font-bold">‚Ä¢</span>
                      <span className="text-gray-700 text-xs sm:text-sm">{suggestion}</span>
                    </li>
                  ))}
                </ul>
              </div>

              {/* Armenian fun fact block */}
              <div className="bg-gradient-to-r from-purple-50 to-pink-50 p-4 sm:p-6 rounded-lg">
                <h3 className="font-semibold text-gray-800 mb-2 sm:mb-3 text-sm sm:text-base">‘≥’´’ø’•’û’Ω, ’∏÷Ä...</h3>
                <p className="text-xs sm:text-sm text-gray-600">{randomArmeniaFact}</p>
              </div>
            </div>
          </div>

          <div className="text-center space-y-3 sm:space-y-4">
            <div className="flex flex-col sm:flex-row justify-center gap-3 sm:gap-4">
              <Button onClick={onRestart} variant="outline" className="w-full sm:w-auto px-4 sm:px-6 py-2 sm:py-3 hover-scale text-sm sm:text-base">
                üîÑ ’Ü’∏÷Ä’´÷Å ’°’∂÷Å’∂’•’¨ ’©’•’Ω’ø’®
              </Button>
              <Button
                className="w-full sm:w-auto bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white px-4 sm:px-6 py-2 sm:py-3 hover-scale text-sm sm:text-base"
                onClick={() => {
                  if (navigator.share) {
                    navigator.share({
                      title: 'CO‚ÇÇ Quiz Results',
                      text: `‘ª’¥ ÷Ö÷Ä’°’Ø’°’∂ CO‚ÇÇ ’°’¶’§’•÷Å’∏÷Ç’©’µ’∏÷Ç’∂’® ${dailyCO2.toFixed(1)}’£ ’ß! ‘¥’∏÷Ç÷Ñ ’ß’¨ ÷É’∏÷Ä’±’•÷Ñ:`,
                      url: window.location.href
                    });
                  }
                }}
              >
                üì§ ‘ø’´’Ω’æ’•’¨ ’®’∂’Ø’•÷Ä’∂’•÷Ä’´’§ ’∞’•’ø
              </Button>
            </div>
          </div>
        </Card>
      </div>
    </div>
  );
};

export default ResultsSection;
